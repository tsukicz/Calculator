* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
    font-weight: bold;
}

body {
    width: auto;
    height: auto;

    background-image: url(img/pxfuel.jpg);
}

:root {
    --background-output: rgb(233, 159, 194);
    --color-number: rgb(250, 219, 227);
    --background-button: rgb(243, 174, 205);
    --background-operator: rgb(202, 96, 145);
    --color-previous: rgb(247, 231, 238);
    --color-current: rgb(255, 255, 255);
}


.grid-container {
    display: grid;
    justify-content: center;
    align-content: center;
    min-height: 100vh;
    grid-template-columns: repeat(4, 100px);
    grid-template-rows: minmax(120px, auto) repeat(5, 100px);
}

.grid-container > button {
    cursor: pointer;
    font-size: 2rem;

    border-radius: 10px;
    border: none;

    outline: none;
    background-color: var(--background-button);
    color: var(--color-number);
}

.grid-container > .operator {
    background: var(--background-operator);
}

.span-two {
    grid-column: span 2;
}

.grid-container > .output {
    grid-column: 1 / -1; /* Ajustar o grid dando 1 linha inteira para o output */

    background-color: var(--background-output);
    border-radius: 10px;

    display: flex;
    flex-direction: column; /* Deixa um emcima do outro */
    align-items: flex-end; /* Coloca os elementos para a direita */
    justify-content: space-around;
    padding: 10px;
    word-wrap: break-word;
    word-break: break-all; /* NÃ£o excede a div */
}

.grid-container > .output > .previous-operand {
    color: var(--color-previous);
    font-size: 1.5rem;
}

.grid-container > .output > .current-operand {
    color: var(--color-current);
    font-size: 2.5rem;
}

button:hover, .operator:hover {
    background-color: var(--color-number);
    color: var(--background-operator);
}





 